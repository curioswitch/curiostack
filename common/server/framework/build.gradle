/*
 * MIT License
 *
 * Copyright (c) 2017 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'java-library'
apply plugin: 'maven-publish'

archivesBaseName = 'curio-server-framework'

dependencies {
    api 'com.google.cloud:google-cloud-trace'
    api 'com.google.dagger:dagger'
    api 'com.google.firebase:firebase-admin'
    api 'com.linecorp.armeria:armeria'
    api 'com.spotify:futures-extra'
    api 'com.typesafe:config'
    api 'io.grpc:grpc-core'
    api 'io.zipkin.brave:brave'
    api 'org.apache.logging.log4j:log4j-api'
    api 'org.jooq:jooq'

    implementation 'com.google.cloud.trace.adapters.zipkin:translation'
    implementation 'com.google.dagger:dagger-producers'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.linecorp.armeria:armeria-grpc'
    implementation 'com.linecorp.armeria:armeria-zipkin'
    implementation 'com.zaxxer:HikariCP'
    implementation 'io.zipkin.brave:brave-instrumentation-mysql'
    implementation 'io.dropwizard.metrics:metrics-json'
    implementation 'io.dropwizard.metrics:metrics-jvm'
    implementation 'io.grpc:grpc-services'
    implementation 'io.prometheus:simpleclient_hotspot'
    implementation 'io.prometheus:simpleclient_log4j2'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-jcl'
    implementation 'org.apache.logging.log4j:log4j-jul'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl'
    implementation 'org.jctools:jctools-core'

    runtime 'mysql:mysql-connector-java'

    apt 'com.google.dagger:dagger-compiler'

    apt 'org.immutables:value'
    compileOnly group: 'org.immutables', name: 'value', classifier: 'annotations'
}

publishing {
    publications {
        maven(MavenPublication) {
            pom.withXml {
                // TODO(choko): Make it simpler to define pom attributes after the artifact, as is
                // normal, by defining a DSL or something.
                asNode().children()[3] + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    name 'Curio Server Framework'
                    description 'A server framework to make it simple to create a ' +
                            'production-ready, API server or web service in Java.'
                    url 'https://github.com/curioswitch/curiostack/tree/master/' +
                            'common/server/framework'
                }
            }
        }
    }
}
